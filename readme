## Demo

https://www.youtube.com/watch?v=Ver59njuX-k 

# Cypress Test Automation Framework

This project is a Cypress test automation framework using the Page Object Model (POM) and Keyword Driven Actions. It includes a setup for generating test reports using `cypress-mochawesome-reporter`.

## Prerequisites

Ensure you have the following installed on your machine:
- [Node.js](https://nodejs.org/)
- npm (comes with Node.js)

## Installation

1. **Clone the repository or extract the provided zip file**
2. **Install the dependencies**:
- npm install

## Running Tests

3. **Setting up variables before running Cypress on your command:**
$env:CYPRESS_ENV="QA";  # Set the environment
$env:CYPRESS_BASE_URL="https://automationexercise.com/"; # Set the base URL
$env:CYPRESS_ADMIN_EMAIL="erick@gmail.com"; # Admin email
$env:CYPRESS_ADMIN_PASSWORD="testing123";  # Admin password
$env:CYPRESS_TAGS="smoke,sanity"  # Only run tests tagged as smoke or sanity

export CYPRESS_ENV="QA";  # Set the environment
export CYPRESS_BASE_URL="https://automationexercise.com/"; # Set the base URL
export CYPRESS_ADMIN_EMAIL="erick@gmail.com"; # Admin email
export CYPRESS_ADMIN_PASSWORD="testing123";  # Admin password
export CYPRESS_TAGS="smoke,sanity"  # Only run tests tagged as smoke or sanity

Running Cypress Tests Visually
To open the Cypress Test Runner and run tests interactively:
- npx cypress open

Running Cypress Tests Headlessly
To run the tests headlessly and generate reports (this will generate the reports)
- npx cypress run 

## Project Structure
- cypress/: Contains all Cypress test files, page objects, actions, and support files.
  -- e2e/: Root folder for test cypress files
    -- ChuckNorris/: Simple API test simulation
    -- homepage/: Automated test files for ecommerce site
  -- fixtures/: Test data files.
  -- plugins/: Test enhancement files (mochawesome-report-generator)
  -- reports/: Report files generated from mochawesome-report-generator plugin
  -- support/: Root folder for Page Object Model + Actions files
    --- pageObjects/: Page Object Model files.
    --- actions/: Keyword driven action files.
    --- commands.js: Custom Cypress commands.
    --- utils.js: Support file for loading reusable utilities.
    --- videos/: Directory where test videos will be saved.
  -- package.json: npm configuration file with dependencies and scripts.
  -- cypress.json: Cypress configuration file.

## Notes
- Ensure you have the correct permissions to install and run Node.js applications.
- If you have any questions or issues, please contact erick at erick.leiva.cas@gmail.com
